// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: APSdet_GPB.proto

#ifndef PROTOBUF_APSdet_5fGPB_2eproto__INCLUDED
#define PROTOBUF_APSdet_5fGPB_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace APSdet_GPB {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_APSdet_5fGPB_2eproto();
void protobuf_AssignDesc_APSdet_5fGPB_2eproto();
void protobuf_ShutdownFile_APSdet_5fGPB_2eproto();

class AGP;

enum AGP_ArrayDataType {
  AGP_ArrayDataType_UINT8 = 0,
  AGP_ArrayDataType_INT8 = 1,
  AGP_ArrayDataType_UINT16 = 2,
  AGP_ArrayDataType_INT16 = 3,
  AGP_ArrayDataType_UINT32 = 4,
  AGP_ArrayDataType_INT32 = 5,
  AGP_ArrayDataType_INT64 = 6,
  AGP_ArrayDataType_FLOAT32 = 7,
  AGP_ArrayDataType_FLOAT64 = 8,
  AGP_ArrayDataType_AGP_ArrayDataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AGP_ArrayDataType_AGP_ArrayDataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AGP_ArrayDataType_IsValid(int value);
const AGP_ArrayDataType AGP_ArrayDataType_ArrayDataType_MIN = AGP_ArrayDataType_UINT8;
const AGP_ArrayDataType AGP_ArrayDataType_ArrayDataType_MAX = AGP_ArrayDataType_FLOAT64;
const int AGP_ArrayDataType_ArrayDataType_ARRAYSIZE = AGP_ArrayDataType_ArrayDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AGP_ArrayDataType_descriptor();
inline const ::std::string& AGP_ArrayDataType_Name(AGP_ArrayDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AGP_ArrayDataType_descriptor(), value);
}
inline bool AGP_ArrayDataType_Parse(
    const ::std::string& name, AGP_ArrayDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AGP_ArrayDataType>(
    AGP_ArrayDataType_descriptor(), name, value);
}
// ===================================================================

class AGP : public ::google::protobuf::Message {
 public:
  AGP();
  virtual ~AGP();

  AGP(const AGP& from);

  inline AGP& operator=(const AGP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AGP& default_instance();

  void Swap(AGP* other);

  // implements Message ----------------------------------------------

  inline AGP* New() const { return New(NULL); }

  AGP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AGP& from);
  void MergeFrom(const AGP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AGP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AGP_ArrayDataType ArrayDataType;
  static const ArrayDataType UINT8 = AGP_ArrayDataType_UINT8;
  static const ArrayDataType INT8 = AGP_ArrayDataType_INT8;
  static const ArrayDataType UINT16 = AGP_ArrayDataType_UINT16;
  static const ArrayDataType INT16 = AGP_ArrayDataType_INT16;
  static const ArrayDataType UINT32 = AGP_ArrayDataType_UINT32;
  static const ArrayDataType INT32 = AGP_ArrayDataType_INT32;
  static const ArrayDataType INT64 = AGP_ArrayDataType_INT64;
  static const ArrayDataType FLOAT32 = AGP_ArrayDataType_FLOAT32;
  static const ArrayDataType FLOAT64 = AGP_ArrayDataType_FLOAT64;
  static inline bool ArrayDataType_IsValid(int value) {
    return AGP_ArrayDataType_IsValid(value);
  }
  static const ArrayDataType ArrayDataType_MIN =
    AGP_ArrayDataType_ArrayDataType_MIN;
  static const ArrayDataType ArrayDataType_MAX =
    AGP_ArrayDataType_ArrayDataType_MAX;
  static const int ArrayDataType_ARRAYSIZE =
    AGP_ArrayDataType_ArrayDataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ArrayDataType_descriptor() {
    return AGP_ArrayDataType_descriptor();
  }
  static inline const ::std::string& ArrayDataType_Name(ArrayDataType value) {
    return AGP_ArrayDataType_Name(value);
  }
  static inline bool ArrayDataType_Parse(const ::std::string& name,
      ArrayDataType* value) {
    return AGP_ArrayDataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 numDimData = 1;
  void clear_numdimdata();
  static const int kNumDimDataFieldNumber = 1;
  ::google::protobuf::int32 numdimdata() const;
  void set_numdimdata(::google::protobuf::int32 value);

  // optional string dimData = 2;
  void clear_dimdata();
  static const int kDimDataFieldNumber = 2;
  const ::std::string& dimdata() const;
  void set_dimdata(const ::std::string& value);
  void set_dimdata(const char* value);
  void set_dimdata(const char* value, size_t size);
  ::std::string* mutable_dimdata();
  ::std::string* release_dimdata();
  void set_allocated_dimdata(::std::string* dimdata);

  // optional .APSdet_GPB.AGP.ArrayDataType dataType = 3;
  void clear_datatype();
  static const int kDataTypeFieldNumber = 3;
  ::APSdet_GPB::AGP_ArrayDataType datatype() const;
  void set_datatype(::APSdet_GPB::AGP_ArrayDataType value);

  // optional bytes valuesData = 4;
  void clear_valuesdata();
  static const int kValuesDataFieldNumber = 4;
  const ::std::string& valuesdata() const;
  void set_valuesdata(const ::std::string& value);
  void set_valuesdata(const char* value);
  void set_valuesdata(const void* value, size_t size);
  ::std::string* mutable_valuesdata();
  ::std::string* release_valuesdata();
  void set_allocated_valuesdata(::std::string* valuesdata);

  // optional int32 unquieID = 5;
  void clear_unquieid();
  static const int kUnquieIDFieldNumber = 5;
  ::google::protobuf::int32 unquieid() const;
  void set_unquieid(::google::protobuf::int32 value);

  // optional double timeStamp = 6;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 6;
  double timestamp() const;
  void set_timestamp(double value);

  // optional int32 numAttrs = 7;
  void clear_numattrs();
  static const int kNumAttrsFieldNumber = 7;
  ::google::protobuf::int32 numattrs() const;
  void set_numattrs(::google::protobuf::int32 value);

  // optional string nameAttrs = 8;
  void clear_nameattrs();
  static const int kNameAttrsFieldNumber = 8;
  const ::std::string& nameattrs() const;
  void set_nameattrs(const ::std::string& value);
  void set_nameattrs(const char* value);
  void set_nameattrs(const char* value, size_t size);
  ::std::string* mutable_nameattrs();
  ::std::string* release_nameattrs();
  void set_allocated_nameattrs(::std::string* nameattrs);

  // optional string typeAttrs = 9;
  void clear_typeattrs();
  static const int kTypeAttrsFieldNumber = 9;
  const ::std::string& typeattrs() const;
  void set_typeattrs(const ::std::string& value);
  void set_typeattrs(const char* value);
  void set_typeattrs(const char* value, size_t size);
  ::std::string* mutable_typeattrs();
  ::std::string* release_typeattrs();
  void set_allocated_typeattrs(::std::string* typeattrs);

  // optional bytes valuesAttrs = 10;
  void clear_valuesattrs();
  static const int kValuesAttrsFieldNumber = 10;
  const ::std::string& valuesattrs() const;
  void set_valuesattrs(const ::std::string& value);
  void set_valuesattrs(const char* value);
  void set_valuesattrs(const void* value, size_t size);
  ::std::string* mutable_valuesattrs();
  ::std::string* release_valuesattrs();
  void set_allocated_valuesattrs(::std::string* valuesattrs);

  // @@protoc_insertion_point(class_scope:APSdet_GPB.AGP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr dimdata_;
  ::google::protobuf::int32 numdimdata_;
  int datatype_;
  ::google::protobuf::internal::ArenaStringPtr valuesdata_;
  double timestamp_;
  ::google::protobuf::int32 unquieid_;
  ::google::protobuf::int32 numattrs_;
  ::google::protobuf::internal::ArenaStringPtr nameattrs_;
  ::google::protobuf::internal::ArenaStringPtr typeattrs_;
  ::google::protobuf::internal::ArenaStringPtr valuesattrs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_APSdet_5fGPB_2eproto();
  friend void protobuf_AssignDesc_APSdet_5fGPB_2eproto();
  friend void protobuf_ShutdownFile_APSdet_5fGPB_2eproto();

  void InitAsDefaultInstance();
  static AGP* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AGP

// optional int32 numDimData = 1;
inline void AGP::clear_numdimdata() {
  numdimdata_ = 0;
}
inline ::google::protobuf::int32 AGP::numdimdata() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.numDimData)
  return numdimdata_;
}
inline void AGP::set_numdimdata(::google::protobuf::int32 value) {
  
  numdimdata_ = value;
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.numDimData)
}

// optional string dimData = 2;
inline void AGP::clear_dimdata() {
  dimdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AGP::dimdata() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.dimData)
  return dimdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_dimdata(const ::std::string& value) {
  
  dimdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.dimData)
}
inline void AGP::set_dimdata(const char* value) {
  
  dimdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APSdet_GPB.AGP.dimData)
}
inline void AGP::set_dimdata(const char* value, size_t size) {
  
  dimdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APSdet_GPB.AGP.dimData)
}
inline ::std::string* AGP::mutable_dimdata() {
  
  // @@protoc_insertion_point(field_mutable:APSdet_GPB.AGP.dimData)
  return dimdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AGP::release_dimdata() {
  
  return dimdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_allocated_dimdata(::std::string* dimdata) {
  if (dimdata != NULL) {
    
  } else {
    
  }
  dimdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dimdata);
  // @@protoc_insertion_point(field_set_allocated:APSdet_GPB.AGP.dimData)
}

// optional .APSdet_GPB.AGP.ArrayDataType dataType = 3;
inline void AGP::clear_datatype() {
  datatype_ = 0;
}
inline ::APSdet_GPB::AGP_ArrayDataType AGP::datatype() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.dataType)
  return static_cast< ::APSdet_GPB::AGP_ArrayDataType >(datatype_);
}
inline void AGP::set_datatype(::APSdet_GPB::AGP_ArrayDataType value) {
  
  datatype_ = value;
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.dataType)
}

// optional bytes valuesData = 4;
inline void AGP::clear_valuesdata() {
  valuesdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AGP::valuesdata() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.valuesData)
  return valuesdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_valuesdata(const ::std::string& value) {
  
  valuesdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.valuesData)
}
inline void AGP::set_valuesdata(const char* value) {
  
  valuesdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APSdet_GPB.AGP.valuesData)
}
inline void AGP::set_valuesdata(const void* value, size_t size) {
  
  valuesdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APSdet_GPB.AGP.valuesData)
}
inline ::std::string* AGP::mutable_valuesdata() {
  
  // @@protoc_insertion_point(field_mutable:APSdet_GPB.AGP.valuesData)
  return valuesdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AGP::release_valuesdata() {
  
  return valuesdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_allocated_valuesdata(::std::string* valuesdata) {
  if (valuesdata != NULL) {
    
  } else {
    
  }
  valuesdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valuesdata);
  // @@protoc_insertion_point(field_set_allocated:APSdet_GPB.AGP.valuesData)
}

// optional int32 unquieID = 5;
inline void AGP::clear_unquieid() {
  unquieid_ = 0;
}
inline ::google::protobuf::int32 AGP::unquieid() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.unquieID)
  return unquieid_;
}
inline void AGP::set_unquieid(::google::protobuf::int32 value) {
  
  unquieid_ = value;
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.unquieID)
}

// optional double timeStamp = 6;
inline void AGP::clear_timestamp() {
  timestamp_ = 0;
}
inline double AGP::timestamp() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.timeStamp)
  return timestamp_;
}
inline void AGP::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.timeStamp)
}

// optional int32 numAttrs = 7;
inline void AGP::clear_numattrs() {
  numattrs_ = 0;
}
inline ::google::protobuf::int32 AGP::numattrs() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.numAttrs)
  return numattrs_;
}
inline void AGP::set_numattrs(::google::protobuf::int32 value) {
  
  numattrs_ = value;
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.numAttrs)
}

// optional string nameAttrs = 8;
inline void AGP::clear_nameattrs() {
  nameattrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AGP::nameattrs() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.nameAttrs)
  return nameattrs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_nameattrs(const ::std::string& value) {
  
  nameattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.nameAttrs)
}
inline void AGP::set_nameattrs(const char* value) {
  
  nameattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APSdet_GPB.AGP.nameAttrs)
}
inline void AGP::set_nameattrs(const char* value, size_t size) {
  
  nameattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APSdet_GPB.AGP.nameAttrs)
}
inline ::std::string* AGP::mutable_nameattrs() {
  
  // @@protoc_insertion_point(field_mutable:APSdet_GPB.AGP.nameAttrs)
  return nameattrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AGP::release_nameattrs() {
  
  return nameattrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_allocated_nameattrs(::std::string* nameattrs) {
  if (nameattrs != NULL) {
    
  } else {
    
  }
  nameattrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nameattrs);
  // @@protoc_insertion_point(field_set_allocated:APSdet_GPB.AGP.nameAttrs)
}

// optional string typeAttrs = 9;
inline void AGP::clear_typeattrs() {
  typeattrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AGP::typeattrs() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.typeAttrs)
  return typeattrs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_typeattrs(const ::std::string& value) {
  
  typeattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.typeAttrs)
}
inline void AGP::set_typeattrs(const char* value) {
  
  typeattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APSdet_GPB.AGP.typeAttrs)
}
inline void AGP::set_typeattrs(const char* value, size_t size) {
  
  typeattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APSdet_GPB.AGP.typeAttrs)
}
inline ::std::string* AGP::mutable_typeattrs() {
  
  // @@protoc_insertion_point(field_mutable:APSdet_GPB.AGP.typeAttrs)
  return typeattrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AGP::release_typeattrs() {
  
  return typeattrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_allocated_typeattrs(::std::string* typeattrs) {
  if (typeattrs != NULL) {
    
  } else {
    
  }
  typeattrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), typeattrs);
  // @@protoc_insertion_point(field_set_allocated:APSdet_GPB.AGP.typeAttrs)
}

// optional bytes valuesAttrs = 10;
inline void AGP::clear_valuesattrs() {
  valuesattrs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AGP::valuesattrs() const {
  // @@protoc_insertion_point(field_get:APSdet_GPB.AGP.valuesAttrs)
  return valuesattrs_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_valuesattrs(const ::std::string& value) {
  
  valuesattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APSdet_GPB.AGP.valuesAttrs)
}
inline void AGP::set_valuesattrs(const char* value) {
  
  valuesattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APSdet_GPB.AGP.valuesAttrs)
}
inline void AGP::set_valuesattrs(const void* value, size_t size) {
  
  valuesattrs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APSdet_GPB.AGP.valuesAttrs)
}
inline ::std::string* AGP::mutable_valuesattrs() {
  
  // @@protoc_insertion_point(field_mutable:APSdet_GPB.AGP.valuesAttrs)
  return valuesattrs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AGP::release_valuesattrs() {
  
  return valuesattrs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AGP::set_allocated_valuesattrs(::std::string* valuesattrs) {
  if (valuesattrs != NULL) {
    
  } else {
    
  }
  valuesattrs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valuesattrs);
  // @@protoc_insertion_point(field_set_allocated:APSdet_GPB.AGP.valuesAttrs)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace APSdet_GPB

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::APSdet_GPB::AGP_ArrayDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::APSdet_GPB::AGP_ArrayDataType>() {
  return ::APSdet_GPB::AGP_ArrayDataType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_APSdet_5fGPB_2eproto__INCLUDED
